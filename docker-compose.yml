services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: backend
    container_name: apiconf-agent-backend
    env_file:
      - .env
    networks:
      - apiconf-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/agents/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./data:/app/data

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: apiconf-agent-nginx
    ports:
      - "2025:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - apiconf-network
    restart: unless-stopped

  csv-updater:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: csv-updater
    container_name: apiconf-csv-updater
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pgrep", "cron"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apiconf-network

networks:
  apiconf-network:
    driver: bridge 
